The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use it:

    >>> matrix_divided([[3, 2], [1, 3]], 2)
    [[1.5, 1.0], [0.5, 1.5]]

    >>> matrix_divided([[3, 2], [1, 3]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> print(matrix_divided([[3, 2], [1, 4, 6]], 2))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[3, 2], [1, "Hola mijo"]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integer/floats

    >>> matrix_divided([[3, 2], [1, 4]], "hola mijo")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[3, 2], [1, 4]], None)
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[3, 2], [1, float("inf")]], 3)
    Traceback (most recent call last):
    TypeError: div must be a number
